<UserControl x:Class="Modules.ApiServer.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>

        <ResourceDictionary>

            <Style x:Key="UpdateButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Azure"/>
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="BorderBrush" Value="Blue"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Height" Value="25"/>
            </Style>

            <Style 
                x:Key="SettingsCheckBoxStyle" 
                TargetType="{x:Type CheckBox}" 
                >
                <Setter Property="Margin" Value="5"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="Blue"/>
            </Style>

            <Style
                x:Key="SettingsLabelStyle"
                TargetType="{x:Type TextBlock}"
                >
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style
                x:Key="SettingsTextBoxStyle"
                TargetType="{x:Type TextBox}"
                >
                <Setter Property="Margin" Value="5"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="200"/>
                <Setter Property="BorderBrush" Value="Blue"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="TextAlignment" Value="Center"/>
            </Style>

            <Style
                x:Key="SettingsBorderStyle"
                TargetType="{x:Type Border}"
                >
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Margin" Value="0,5,0,5"/>

            </Style>

            <Style
                x:Key="SettingsHeaderLabelStyle"
                TargetType="{x:Type TextBlock}"
                >
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="Blue"/>

            </Style>

            <Style x:Key="SettingsAPIStackPanel" TargetType="{x:Type StackPanel}">

                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="Margin" Value="5"/>

            </Style>

            <Style 
                x:Key="NoAuthCheckBoxStyle"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding NoAuthAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="ApiKeyCheckBoxStyle"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ApiKeyAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="ApiKeyTextBoxStyle" 
                TargetType="{x:Type TextBox}" 
                BasedOn="{StaticResource  SettingsTextBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ApiKeyStringIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ApiKeyAllowed}" Value="False">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="ToolTip" Value="{Binding ApiKeyStringOriginalValue}"/>
            </Style>

            <Style 
                x:Key="BearerTokenCheckBoxStyle"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding BearerTokenAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="BearerTokenTextBoxStyle" 
                TargetType="{x:Type TextBox}" 
                BasedOn="{StaticResource  SettingsTextBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding BearerTokenStringIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding BearerTokenAllowed}" Value="False">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="ToolTip" Value="{Binding BearerTokenOriginalValue}"/>
            </Style>

            <Style 
                x:Key="BasicAuthCheckBoxStyle"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding BasicAuthAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="BasicAuthUserNameTextBoxStyle" 
                TargetType="{x:Type TextBox}" 
                BasedOn="{StaticResource  SettingsTextBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding BasicAuthUserNameStringIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding BasicAuthAllowed}" Value="False">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="ToolTip" Value="{Binding BasicAuthUserNameStringOriginalValue}"/>
            </Style>


            <Style 
                x:Key="BasicAuthUserPasswordBoxStyle" 
                TargetType="{x:Type TextBox}" 
                BasedOn="{StaticResource  SettingsTextBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding BasicAuthPasswordStringIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding BasicAuthAllowed}" Value="False">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="ToolTip" Value="{Binding BasicAuthPasswordStringOriginalValue}"/>
            </Style>


            <Style 
                x:Key="APIServerAvailabilityCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ServerAvailablitiyAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="APIGetTimeCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding GetTimeAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="APIGetUserCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding GetUserByIdAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <Style 
                x:Key="APIAddUserCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding AddUserIsAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <Style 
                x:Key="APIRemoveUserCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RemoveUserByIdAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="GetOrderByIdCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding GetOrderByIdAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="APIAddOrderCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding AddOrderAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="APIFinishOrderCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding FinishOrderAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="APIGetOrdersForUserCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding GetOrdersForUserAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style 
                x:Key="APIDisableUserCheckBox"
                BasedOn="{StaticResource SettingsCheckBoxStyle}"
                TargetType="{x:Type CheckBox}"
                >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DisableUserAllowedIsChanged}" Value="True">
                        <Setter Property="Background" Value="PaleGoldenrod"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>



        </ResourceDictionary>
        
    </UserControl.Resources>

    <Grid>

        <Grid.RowDefinitions>

            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>

        </Grid.RowDefinitions>

        <Border 
            Grid.Row="0"
            Style="{StaticResource SettingsBorderStyle}"
            >

            <Grid>
                <Grid.RowDefinitions>
                    
                    <RowDefinition/>
                    <RowDefinition Height="10"/>
                    <RowDefinition/>
                    <RowDefinition Height="10"/>
                    <RowDefinition/>
                    <RowDefinition Height="10"/>
                    <RowDefinition/>
                    <RowDefinition Height="10"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="20"/>

                </Grid.ColumnDefinitions>

                <TextBlock 
                    Grid.Row="0"
                    Grid.Column="1"
                    Grid.ColumnSpan="5"
                    Text="Authentication Settings"
                    Style="{StaticResource SettingsHeaderLabelStyle}"
                    />

        <!-- No Auth -->
                
                <TextBlock
                        Grid.Row="2"
                        Grid.Column="1"
                        Text="Noauth"
                        Style="{StaticResource SettingsLabelStyle}"
                        />

                    <CheckBox
                        Grid.Row="2"
                        Grid.Column="2"
                        Style="{StaticResource NoAuthCheckBoxStyle}"
                        IsChecked="{Binding NoAuthAllowed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        />

        <!-- Api Key -->
                    
                    <TextBlock
                        Style="{StaticResource SettingsLabelStyle}"
                        Grid.Row="4"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Text="ApiKey"
                        />

                    <CheckBox
                        Grid.Row="4"
                        Grid.Column="2"
                        Style="{StaticResource ApiKeyCheckBoxStyle}"
                        IsChecked="{Binding ApiKeyAllowed ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        />
                

                    <TextBox
                        Grid.Row="4"
                        Grid.Column="4"
                        Style="{StaticResource ApiKeyTextBoxStyle}"
                        Text="{Binding ApiKeyString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        />

        <!-- Bearer token -->

                    <TextBlock
                        Style="{StaticResource SettingsLabelStyle}"
                        Grid.Row="6"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Text="Bearer Token"
                        />

                    <CheckBox
                        Grid.Row="6"
                        Grid.Column="2"
                        Style="{StaticResource BearerTokenCheckBoxStyle}"
                        IsChecked="{Binding BearerTokenAllowed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        />

                    <TextBox
                        Grid.Row="6"
                        Grid.Column="4"
                        Style="{StaticResource BearerTokenTextBoxStyle}"
                        Text="{Binding BearerTokenString ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        />
                
        <!-- Basic -->
                
                <TextBlock
                        Style="{StaticResource SettingsLabelStyle}"
                        Grid.Row="8"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Text="Basic"
                        />

                    <CheckBox
                        Grid.Row="8"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        Style="{StaticResource BasicAuthCheckBoxStyle}"
                        IsChecked="{Binding BasicAuthAllowed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        />

                    <TextBox
                        Grid.Row="8"
                        Grid.Column="4"
                        Style="{StaticResource BasicAuthUserNameTextBoxStyle}"
                        Text="{Binding BasicAuthUserNameString}"
                        />

                    <TextBox
                        Grid.Row="8"
                        Grid.Column="5"
                        Style="{StaticResource BasicAuthUserPasswordBoxStyle}"
                        Text="{Binding BasicAuthPasswordString}"
                        />


            </Grid>
        </Border>

        <Border 
            Grid.Row="1"
            Style="{StaticResource SettingsBorderStyle}"
            >

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>

                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock 
                    Grid.Row="0"
                    Grid.Column="1"
                   Text="Allowed APIs"
                    Style="{StaticResource SettingsHeaderLabelStyle}"
                    />

                <!-- Server Availability -->
                <StackPanel
                    Grid.Row="1"
                    Grid.Column="1"
                    Orientation="Horizontal">

                    <CheckBox
                        Style="{StaticResource APIServerAvailabilityCheckBox}"
                        IsChecked="{Binding ServerAvailablitiyAllowed}"
                        />
                    <TextBlock
                        Text="ServerAvailability"
                        Style="{StaticResource SettingsLabelStyle}"
                    />
                    
                </StackPanel>

                <!-- Get Time -->
                <StackPanel
                    Grid.Row="2"
                    Grid.Column="1"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >

                    <CheckBox
                        Style="{StaticResource APIGetTimeCheckBox}"
                        IsChecked="{Binding GetTimeAllowed}"
                        />
                    <TextBlock
                        Text="GetTime"
                        Style="{StaticResource SettingsLabelStyle}"
                    />
                    
                </StackPanel>

                <!-- Get User By id -->
                <StackPanel
                    Grid.Row="3"
                    Grid.Column="1"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >

                    <CheckBox
                        Style="{StaticResource APIGetUserCheckBox}"
                        IsChecked="{Binding GetUserByIdAllowed}"
                        />
                    <TextBlock
                        Text="Get user by ID"
                        Style="{StaticResource SettingsLabelStyle}"
                    />

                </StackPanel>

                <!-- Add user -->
                <StackPanel
                    Grid.Row="4"
                    Grid.Column="1"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >
                    <CheckBox
                        Style="{StaticResource APIAddUserCheckBox}"
                        IsChecked="{Binding AddUserIsAllowed}"
                        />
                    <TextBlock
                        Text="Add User"
                        Style="{StaticResource SettingsLabelStyle}"
                    />

                </StackPanel>

                <!-- Remove user -->
                <StackPanel
                    Grid.Row="5"
                    Grid.Column="1"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >

                    <CheckBox
                        Style="{StaticResource APIRemoveUserCheckBox}"
                        IsChecked="{Binding RemoveUserByIdAllowed}"
                        />
                    <TextBlock
                        Text="Remove User By ID"
                        Style="{StaticResource SettingsLabelStyle}"
                    />
                    
                </StackPanel>

                <!-- Get order By id -->
                <StackPanel
                    Grid.Row="1"
                    Grid.Column="2"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >

                    <CheckBox
                        Style="{StaticResource GetOrderByIdCheckBox}"
                        IsChecked="{Binding GetOrderByIdAllowed}"
                        />
                    <TextBlock
                        Text="Get order by ID"
                        Style="{StaticResource SettingsLabelStyle}"
                    />

                </StackPanel>

                <!-- Add order -->
                <StackPanel
                    Grid.Row="2"
                    Grid.Column="2"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >

                    <CheckBox
                        Style="{StaticResource APIAddOrderCheckBox}"
                        IsChecked="{Binding AddOrderAllowed}"
                        />
                    <TextBlock
                        Text="Add Order"
                        Style="{StaticResource SettingsLabelStyle}"
                    />
                </StackPanel>

                <!-- Get order for user -->
                <StackPanel
                    Grid.Row="3"
                    Grid.Column="2"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >

                        <CheckBox
                        Style="{StaticResource APIGetOrdersForUserCheckBox}"
                        IsChecked="{Binding GetOrdersForUserAllowed}"
                        />
                        <TextBlock
                        Text="Get order for user"
                        Style="{StaticResource SettingsLabelStyle}"
                    />

                 </StackPanel>
                
                <StackPanel
                    Grid.Row="4"
                    Grid.Column="2"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >

                    <CheckBox
                        Style="{StaticResource APIDisableUserCheckBox}"
                        IsChecked="{Binding DisableUserAllowed}"
                        />
                    <TextBlock
                        Text="Disable User"
                        Style="{StaticResource SettingsLabelStyle}"
                    />

                </StackPanel>

                <StackPanel
                    Grid.Row="5"
                    Grid.Column="2"
                    Style="{StaticResource SettingsAPIStackPanel}"
                    >

                    <CheckBox
                        Style="{StaticResource APIFinishOrderCheckBox}"
                        IsChecked="{Binding FinishOrderAllowed}"
                        />
                    <TextBlock
                        Text="Finish Order"
                        Style="{StaticResource SettingsLabelStyle}"
                    />

                </StackPanel>
                
            </Grid>
            
        </Border>

        <Button
            Content="Update Server Settings"
            Grid.Row="3"
            Height="25"
            Style="{StaticResource UpdateButtonStyle}"
            Command="{Binding UpdateChangesCommand}"
            />

    </Grid>
    
</UserControl>
